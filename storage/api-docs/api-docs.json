{
    "openapi": "3.0.0",
    "info": {
        "title": "Clientes-API",
        "description": "Em caso de <b>problemas/bugs</b> com alguma rota na API, por favor abra uma issue detalhando o erro e, se possível, forneça os passos necessários para reproduzi-lo.",
        "version": "1.0"
    },
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate user and generate access token",
                "description": "Authenticate user using email and password and generate an access token",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Authentication successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "description": "Access token",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Revoke all access tokens for authenticated user",
                "description": "Revoke all access tokens for authenticated user, logging them out of the system",
                "operationId": "fe8f3429cd6979b3b4517e186505f9f9",
                "responses": {
                    "200": {
                        "description": "Access tokens revoked successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/clients": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "List clients",
                "description": "Returns a list of clients, filtered by name, email or phone, paginated by 10 items per page.",
                "operationId": "d00d20521584ab5da83e088abb7aded2",
                "parameters": [
                    {
                        "name": "take",
                        "in": "query",
                        "description": "Selects a specified number of elements",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter clients by name (case insensitive).",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Filter clients by email (case insensitive).",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone",
                        "in": "query",
                        "description": "Filter clients by phone (case insensitive).",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of clients",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "number",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Carlos Henrique"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "email@gmail.com"
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "99999999"
                                        },
                                        "address": {
                                            "properties": {
                                                "cep": {
                                                    "type": "string",
                                                    "example": "55730000"
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "neighborhood": {
                                                    "type": "string",
                                                    "example": "Derby"
                                                },
                                                "city": {
                                                    "type": "string",
                                                    "example": "Bom Jardim"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "example": "2021-12-11T09:25:53.000000Z"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "2021-12-11T09:25:53.000000Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Clients"
                ],
                "summary": "Create a new client",
                "description": "Create a new client",
                "operationId": "f1e86e5b79fedfa6593067977292b13b",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "": {
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "email": {
                                                "type": "string"
                                            },
                                            "phone": {
                                                "type": "string"
                                            },
                                            "user_id": {
                                                "type": "integer"
                                            },
                                            "address": {
                                                "properties": {
                                                    "cep": {
                                                        "type": "string"
                                                    },
                                                    "number": {
                                                        "type": "integer"
                                                    },
                                                    "neighborhood": {
                                                        "type": "string"
                                                    },
                                                    "city": {
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "Carlos Henrique",
                                    "email": "email@gmail.com",
                                    "phone": "99999999",
                                    "user_id": 1,
                                    "address": {
                                        "cep": "55730000",
                                        "number": 5,
                                        "neighborhood": "Derby",
                                        "city": "Bom Jardim",
                                        "state": "PE"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "number",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Carlos Henrique"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "email@gmail.com"
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "99999999"
                                        },
                                        "address": {
                                            "properties": {
                                                "cep": {
                                                    "type": "string",
                                                    "example": "55730000"
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "neighborhood": {
                                                    "type": "string",
                                                    "example": "Derby"
                                                },
                                                "city": {
                                                    "type": "string",
                                                    "example": "Bom Jardim"
                                                },
                                                "state": {
                                                    "type": "string",
                                                    "example": "PE"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "example": "2021-12-11T09:25:53.000000Z"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "2021-12-11T09:25:53.000000Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "example": "fail"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/clients/{id}": {
            "put": {
                "tags": [
                    "Clients"
                ],
                "summary": "Update an existing client",
                "description": "Update an existing client based on the given ID",
                "operationId": "updateClient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Client ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Client data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "phone"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "johndoe@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "555-1234"
                                    },
                                    "address": {
                                        "description": "Client address information",
                                        "properties": {
                                            "cep": {
                                                "type": "string",
                                                "example": "12345678"
                                            },
                                            "number": {
                                                "type": "integer",
                                                "example": 123
                                            },
                                            "neighborhood": {
                                                "type": "string",
                                                "example": "Centro"
                                            },
                                            "city": {
                                                "type": "string",
                                                "example": "São Paulo"
                                            },
                                            "state": {
                                                "type": "string",
                                                "example": "PE"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Client updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Clients"
                ],
                "summary": "Delete a client",
                "description": "Delete a client based on the given ID",
                "operationId": "deleteClient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Client ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Client deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/clients/stats": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "Get statistics of clients by city and state",
                "operationId": "87c063e73473c4e7271bb8832f1b4dfe",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "city": {
                                                "type": "string",
                                                "example": "New York"
                                            },
                                            "state": {
                                                "type": "string",
                                                "example": "NY"
                                            },
                                            "total": {
                                                "type": "integer",
                                                "example": 10
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/orders": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Create a new order",
                "description": "Create a new order and associated items",
                "operationId": "createOrder",
                "requestBody": {
                    "description": "Order object that needs to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "client": {
                                        "description": "The ID of the client that is placing the order",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "total": {
                                        "description": "The total value of the order",
                                        "type": "number",
                                        "format": "float",
                                        "example": "50.99"
                                    },
                                    "items": {
                                        "description": "The list of items in the order",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "product": {
                                                    "description": "The ID of the product being ordered",
                                                    "type": "string",
                                                    "example": "3"
                                                },
                                                "quantity": {
                                                    "description": "The quantity of the product being ordered",
                                                    "type": "integer",
                                                    "example": "2"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The newly created order",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "The ID of the newly created order",
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "total": {
                                            "description": "The total value of the order",
                                            "type": "number",
                                            "format": "float",
                                            "example": "50.99"
                                        },
                                        "client_id": {
                                            "description": "The ID of the client that placed the order",
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "status": {
                                            "description": "The status of the order",
                                            "type": "string",
                                            "example": "REALIZADO"
                                        },
                                        "created_at": {
                                            "description": "The timestamp when the order was created",
                                            "type": "string",
                                            "example": "2023-05-04T10:00:00.000000Z"
                                        },
                                        "updated_at": {
                                            "description": "The timestamp when the order was last updated",
                                            "type": "string",
                                            "example": "2023-05-04T10:00:00.000000Z"
                                        },
                                        "orders_items": {
                                            "description": "The list of items in the order",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "The ID of the order item",
                                                        "type": "integer",
                                                        "example": "1"
                                                    },
                                                    "quantity": {
                                                        "description": "The quantity of the product being ordered",
                                                        "type": "integer",
                                                        "example": "2"
                                                    },
                                                    "product_id": {
                                                        "description": "The ID of the product being ordered",
                                                        "type": "integer",
                                                        "example": "3"
                                                    },
                                                    "created_at": {
                                                        "description": "The timestamp when the order item was created",
                                                        "type": "string",
                                                        "example": "2023-05-04T10:00:00.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "description": "The timestamp when the order item was last updated",
                                                        "type": "string",
                                                        "example": "2023-05-04T10:00:00.000000Z"
                                                    },
                                                    "product": {
                                                        "description": "The product being ordered",
                                                        "properties": {
                                                            "id": {
                                                                "description": "The ID of the product",
                                                                "type": "integer",
                                                                "example": "3"
                                                            },
                                                            "name": {
                                                                "description": "The name of the product",
                                                                "type": "string",
                                                                "example": "Product Name"
                                                            },
                                                            "price": {
                                                                "description": "The price of the product",
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": "25.49"
                                                            },
                                                            "created_at": {
                                                                "description": "The timestamp when the product was created",
                                                                "type": "string",
                                                                "example": "2023-05-04T10:00:00.000000Z"
                                                            },
                                                            "updated_at": {
                                                                "description": "The timestamp when the product was last updated",
                                                                "type": "string",
                                                                "example": "2023-05-04T10:00:00.000000Z"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "The error message",
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "description": "The list of validation errors",
                                            "type": "object",
                                            "example": {
                                                "client": [
                                                    "The selected client is invalid."
                                                ],
                                                "items.0.product": [
                                                    "The selected items.0.product is invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/orders/{id}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get order information",
                "description": "Retrieve order information by ID",
                "operationId": "getOrderById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "orderDate": {
                                            "type": "string",
                                            "example": "17/05/2023"
                                        },
                                        "clientName": {
                                            "type": "string",
                                            "example": "example"
                                        },
                                        "total": {
                                            "type": "string",
                                            "example": "4000.00"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "REALIZADO"
                                        },
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "productDescription": {
                                                        "type": "string",
                                                        "example": "TV"
                                                    },
                                                    "price": {
                                                        "type": "string",
                                                        "example": "4000.00"
                                                    },
                                                    "quantity": {
                                                        "type": "integer",
                                                        "example": 2
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/orders/{id}/cancel": {
            "put": {
                "tags": [
                    "Orders"
                ],
                "summary": "Cancel an order",
                "description": "Cancel an order",
                "operationId": "248062531c2e7d9db386df51e206e63b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the order to be canceled",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully updated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "List products",
                "description": "Returns a list of products, filtered by description and price paginated by 5 items per page.",
                "operationId": "1bfaa78d1c2c3848ab8165c5dadcad3e",
                "parameters": [
                    {
                        "name": "take",
                        "in": "query",
                        "description": "Selects a specified number of elements",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Filter products by description (case insensitive).",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "description": "Filter clients by price (case insensitive).",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "number",
                                            "example": 1
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Notebook"
                                        },
                                        "price": {
                                            "type": "number",
                                            "example": "3000"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "example": "2021-12-11T09:25:53.000000Z"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "2021-12-11T09:25:53.000000Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "description": "Save a new product in the database.",
                "operationId": "e8185e307706e2cd84bbcf5171e2f09d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Produto A"
                                    },
                                    "price": {
                                        "type": "number",
                                        "minimum": 0,
                                        "example": 99.99
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "description": {
                                            "type": "string",
                                            "maxLength": 255,
                                            "example": "Produto A"
                                        },
                                        "price": {
                                            "type": "number",
                                            "minimum": 0,
                                            "example": 99.99
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "datetime",
                                            "example": "2023-05-04 12:34:56"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "datetime",
                                            "example": "2023-05-04 12:34:56"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/products/{id}": {
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete a product by ID",
                "description": "Delete a product by its ID",
                "operationId": "deleteProductById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully deleted product!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Products"
                ],
                "summary": "Update an existing product",
                "operationId": "updateProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "description": "The product description",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "price": {
                                        "description": "The product price",
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "description": "New product description",
                                    "price": 9.99
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "message": "Updated product!"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "message": "Product not found."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/users": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "description": "Create a new user",
                "operationId": "createUser",
                "requestBody": {
                    "description": "user data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "João da Silva"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "joao.silva@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully"
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "O campo name é obrigatório"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "O campo name é obrigatório"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/users/profile": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user profile",
                "description": "Updates the user profile information and password if provided",
                "operationId": "updateProfile",
                "requestBody": {
                    "description": "User profile information and password if provided",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "johndoe@example.com"
                                    },
                                    "current_password": {
                                        "type": "string",
                                        "example": "oldpassword"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "example": "newpassword"
                                    },
                                    "confirm_password": {
                                        "type": "string",
                                        "example": "newpassword"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Laravel Sanctum token authentication",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}